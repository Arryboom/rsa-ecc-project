/*
 * RSA.ECC Assignment 1, FIT5037, Sem 2, 2011
 * By Mark Culhane, 22471634
 */

/*
 * HomePanel.java
 *
 */
package GUI;

import ECC.ECCController;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.math.BigInteger;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Mark Culhane
 */
public class ECCPanel extends javax.swing.JPanel {
    private ECCController eccSess; //only one ECC controller per GUI!

    /** Creates new form HomePanel */
    public ECCPanel() {
        initComponents();
        
    }
    
    /**
     * 
     * @param file String of file path
     * @return fileContents String
     * @throws IOException 
     */
    private String readFile( String file ) throws IOException {
        BufferedReader reader = new BufferedReader( new FileReader (file));
        String line  = null;
        StringBuilder stringBuilder = new StringBuilder();
        String ls = System.getProperty("line.separator");
        while( ( line = reader.readLine() ) != null ) {
            stringBuilder.append( line );
            stringBuilder.append( ls );
    }
    System.out.println(stringBuilder.toString());    
    return stringBuilder.toString();
 }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        keySizeCombo = new javax.swing.JComboBox();
        keySizeLabel = new java.awt.Label();
        genCurveKeysButton = new javax.swing.JButton();
        operationCombo = new javax.swing.JComboBox();
        keySizeLabel1 = new java.awt.Label();
        eccAction = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        generatorXText = new javax.swing.JTextArea();
        generatorXLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        aVariableText = new javax.swing.JTextArea();
        privateKeyLabel = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        eccInputText = new javax.swing.JTextArea();
        eccInputLabel = new javax.swing.JLabel();
        enterKeyCurve = new javax.swing.JButton();
        genHashButton = new javax.swing.JButton();
        fileChooserFrame = new javax.swing.JInternalFrame();
        fileChooser = new javax.swing.JFileChooser();
        aVariableLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        bVariableText = new javax.swing.JTextArea();
        bVariableLabel = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        pVariableText = new javax.swing.JTextArea();
        pVariableLabel = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        alicePrivText = new javax.swing.JTextArea();
        alicePrivLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane10 = new javax.swing.JScrollPane();
        alicePubXText = new javax.swing.JTextArea();
        alicePubXLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        senderLabel = new java.awt.Label();
        senderCombo = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        generatorY1Text = new javax.swing.JTextArea();
        generatorY1Label = new javax.swing.JLabel();
        alicePubYLabel = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        alicePubYText = new javax.swing.JTextArea();
        bobPrivLabel = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        bobPrivText = new javax.swing.JTextArea();
        jScrollPane12 = new javax.swing.JScrollPane();
        bobPubXText = new javax.swing.JTextArea();
        jScrollPane15 = new javax.swing.JScrollPane();
        bobPubYText = new javax.swing.JTextArea();
        bobPubYLabel = new javax.swing.JLabel();
        bobPubXLabel = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        generatorY2Text = new javax.swing.JTextArea();
        generatorY2Label = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        eccOutputText = new javax.swing.JTextArea();
        eccOutputLabel = new javax.swing.JLabel();
        pointAddtion = new javax.swing.JButton();
        pointMultiply = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1256, 591));

        keySizeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "32" }));
        keySizeCombo.setEnabled(false);
        keySizeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keySizeComboActionPerformed(evt);
            }
        });

        keySizeLabel.setText("Select Key Size:");

        genCurveKeysButton.setText("Generate Curve and Keys");
        genCurveKeysButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                genCurveKeysButtonMouseReleased(evt);
            }
        });
        genCurveKeysButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genCurveKeysButtonActionPerformed(evt);
            }
        });

        operationCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Encrypt", "Decrypt", "Sign", "Verify" }));
        operationCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                operationComboMouseClicked(evt);
            }
        });
        operationCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operationComboActionPerformed(evt);
            }
        });

        keySizeLabel1.setText("Select Operation:");

        eccAction.setText("-- RUN ECC ALGORITHM --");
        eccAction.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                eccActionMouseReleased(evt);
            }
        });
        eccAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eccActionActionPerformed(evt);
            }
        });

        generatorXText.setColumns(20);
        generatorXText.setEditable(false);
        generatorXText.setRows(1);
        generatorXText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generatorXTextMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(generatorXText);

        generatorXLabel.setText("Generator X Coordinate:");

        aVariableText.setColumns(25);
        aVariableText.setEditable(false);
        aVariableText.setLineWrap(true);
        aVariableText.setRows(1);
        aVariableText.setWrapStyleWord(true);
        aVariableText.setMaximumSize(new java.awt.Dimension(275, 280));
        aVariableText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aVariableTextMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(aVariableText);

        privateKeyLabel.setText("Elliptic Function Variables:");

        eccInputText.setColumns(25);
        eccInputText.setLineWrap(true);
        eccInputText.setRows(10);
        eccInputText.setWrapStyleWord(true);
        eccInputText.setMaximumSize(new java.awt.Dimension(275, 280));
        eccInputText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eccInputTextMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(eccInputText);

        eccInputLabel.setText("ECC Input");

        enterKeyCurve.setText("-- Enter a curve and keys--");
        enterKeyCurve.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                enterKeyCurveMouseReleased(evt);
            }
        });
        enterKeyCurve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterKeyCurveActionPerformed(evt);
            }
        });

        genHashButton.setText("Generate SHA1 Digest");
        genHashButton.setEnabled(false);
        genHashButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                genHashButtonMouseReleased(evt);
            }
        });
        genHashButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genHashButtonActionPerformed(evt);
            }
        });

        fileChooser.setDialogTitle("Select a File to sign");

        javax.swing.GroupLayout fileChooserFrameLayout = new javax.swing.GroupLayout(fileChooserFrame.getContentPane());
        fileChooserFrame.getContentPane().setLayout(fileChooserFrameLayout);
        fileChooserFrameLayout.setHorizontalGroup(
            fileChooserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(fileChooserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(fileChooserFrameLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(fileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        fileChooserFrameLayout.setVerticalGroup(
            fileChooserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
            .addGroup(fileChooserFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(fileChooserFrameLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(fileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        aVariableLabel.setText("a:");

        bVariableText.setColumns(25);
        bVariableText.setEditable(false);
        bVariableText.setLineWrap(true);
        bVariableText.setRows(1);
        bVariableText.setWrapStyleWord(true);
        bVariableText.setMaximumSize(new java.awt.Dimension(275, 280));
        bVariableText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bVariableTextMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(bVariableText);

        bVariableLabel.setText("b:");

        pVariableText.setColumns(25);
        pVariableText.setEditable(false);
        pVariableText.setLineWrap(true);
        pVariableText.setRows(10);
        pVariableText.setWrapStyleWord(true);
        pVariableText.setMaximumSize(new java.awt.Dimension(275, 280));
        pVariableText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pVariableTextMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(pVariableText);

        pVariableLabel.setText("p:");

        alicePrivText.setColumns(25);
        alicePrivText.setEditable(false);
        alicePrivText.setLineWrap(true);
        alicePrivText.setRows(1);
        alicePrivText.setWrapStyleWord(true);
        alicePrivText.setMaximumSize(new java.awt.Dimension(275, 280));
        alicePrivText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alicePrivTextMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(alicePrivText);

        alicePrivLabel.setText("Alice Private Key:");

        alicePubXText.setColumns(25);
        alicePubXText.setEditable(false);
        alicePubXText.setLineWrap(true);
        alicePubXText.setRows(1);
        alicePubXText.setWrapStyleWord(true);
        alicePubXText.setMaximumSize(new java.awt.Dimension(275, 280));
        alicePubXText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alicePubXTextMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(alicePubXText);

        alicePubXLabel.setText("Alice Public Key X:");

        senderLabel.setText("Select Sender:");

        senderCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Alice", "Bob" }));
        senderCombo.setEnabled(false);
        senderCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                senderComboMouseClicked(evt);
            }
        });
        senderCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                senderComboActionPerformed(evt);
            }
        });

        generatorY1Text.setColumns(20);
        generatorY1Text.setEditable(false);
        generatorY1Text.setRows(1);
        generatorY1Text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generatorY1TextMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(generatorY1Text);

        generatorY1Label.setText("Generator Y1 Coordinate:");

        alicePubYLabel.setText("Alice Public Key Y:");

        alicePubYText.setColumns(25);
        alicePubYText.setEditable(false);
        alicePubYText.setLineWrap(true);
        alicePubYText.setRows(1);
        alicePubYText.setWrapStyleWord(true);
        alicePubYText.setMaximumSize(new java.awt.Dimension(275, 280));
        alicePubYText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alicePubYTextMouseClicked(evt);
            }
        });
        jScrollPane14.setViewportView(alicePubYText);

        bobPrivLabel.setText("Bob Private Key:");

        bobPrivText.setColumns(25);
        bobPrivText.setEditable(false);
        bobPrivText.setLineWrap(true);
        bobPrivText.setRows(1);
        bobPrivText.setWrapStyleWord(true);
        bobPrivText.setMaximumSize(new java.awt.Dimension(275, 280));
        bobPrivText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bobPrivTextMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(bobPrivText);

        bobPubXText.setColumns(25);
        bobPubXText.setEditable(false);
        bobPubXText.setLineWrap(true);
        bobPubXText.setRows(1);
        bobPubXText.setWrapStyleWord(true);
        bobPubXText.setMaximumSize(new java.awt.Dimension(275, 280));
        bobPubXText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bobPubXTextMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(bobPubXText);

        bobPubYText.setColumns(25);
        bobPubYText.setEditable(false);
        bobPubYText.setLineWrap(true);
        bobPubYText.setRows(1);
        bobPubYText.setWrapStyleWord(true);
        bobPubYText.setMaximumSize(new java.awt.Dimension(275, 280));
        bobPubYText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bobPubYTextMouseClicked(evt);
            }
        });
        jScrollPane15.setViewportView(bobPubYText);

        bobPubYLabel.setText("Bob Public Key Y:");

        bobPubXLabel.setText("Bob Public Key X:");

        generatorY2Text.setColumns(20);
        generatorY2Text.setEditable(false);
        generatorY2Text.setRows(1);
        generatorY2Text.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generatorY2TextMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(generatorY2Text);

        generatorY2Label.setText("Generator Y2 Coordinate:");

        eccOutputText.setColumns(25);
        eccOutputText.setLineWrap(true);
        eccOutputText.setRows(10);
        eccOutputText.setWrapStyleWord(true);
        eccOutputText.setMaximumSize(new java.awt.Dimension(275, 280));
        eccOutputText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eccOutputTextMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(eccOutputText);

        eccOutputLabel.setText("ECC Output");

        pointAddtion.setText("Point Addition");
        pointAddtion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pointAddtionMouseReleased(evt);
            }
        });
        pointAddtion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointAddtionActionPerformed(evt);
            }
        });

        pointMultiply.setText("Point Multiply");
        pointMultiply.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pointMultiplyMouseReleased(evt);
            }
        });
        pointMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointMultiplyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(keySizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(keySizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(genCurveKeysButton, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE))
                    .addComponent(privateKeyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE)
                    .addComponent(alicePubYLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(alicePrivLabel)
                            .addComponent(alicePubXLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                            .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bVariableLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(aVariableLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pVariableLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(generatorY2Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(generatorY1Label)
                            .addComponent(generatorXLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bobPubXLabel)
                            .addComponent(bobPrivLabel)
                            .addComponent(bobPubYLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)))
                    .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE)
                    .addComponent(enterKeyCurve, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(senderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                                            .addComponent(senderCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(keySizeLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(operationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                                    .addComponent(genHashButton, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(eccInputLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                                    .addGap(234, 234, 234))))
                        .addGroup(layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                                .addComponent(eccOutputLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                                .addComponent(eccAction, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(pointAddtion, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pointMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 628, Short.MAX_VALUE)
                    .addComponent(fileChooserFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 628, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(547, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(alicePrivLabel)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(alicePubXLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(operationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(genHashButton))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(keySizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(keySizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(genCurveKeysButton)))
                            .addComponent(keySizeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(senderCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(senderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(eccInputLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eccAction)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(eccOutputLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(privateKeyLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pVariableLabel)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(aVariableLabel)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bVariableLabel)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(generatorXLabel)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(generatorY1Label)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(generatorY2Label)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62))
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(alicePubYLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pointAddtion, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pointMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(bobPubXLabel)
                                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(bobPubYLabel)))
                                    .addComponent(bobPrivLabel))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enterKeyCurve, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 668, Short.MAX_VALUE)
                    .addComponent(fileChooserFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 132, Short.MAX_VALUE)))
        );

        keySizeLabel.getAccessibleContext().setAccessibleName("selectKeySize");
        keySizeLabel1.getAccessibleContext().setAccessibleName("RSAOperation");
    }// </editor-fold>//GEN-END:initComponents

private void keySizeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keySizeComboActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_keySizeComboActionPerformed

private void genCurveKeysButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genCurveKeysButtonActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_genCurveKeysButtonActionPerformed

private void operationComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operationComboActionPerformed
    if (operationCombo.getSelectedIndex() == 2) {
        genHashButton.setEnabled(true);
    } else {
        genHashButton.setEnabled(false);
    }
}//GEN-LAST:event_operationComboActionPerformed

private void genCurveKeysButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genCurveKeysButtonMouseReleased
        try {
                eccSess = new ECCController(Integer.parseInt(keySizeCombo.getSelectedItem().toString()));
                pVariableText.setText(eccSess.getP().toString());
                aVariableText.setText(eccSess.getA().toString());
                bVariableText.setText(eccSess.getB().toString());
                generatorXText.setText(eccSess.getgX().toString());
                generatorY1Text.setText(eccSess.getgY1().toString());
                generatorY2Text.setText(eccSess.getgY2().toString());
                alicePrivText.setText(eccSess.getAlicePrivKey().toString());
                bobPrivText.setText(eccSess.getBobPrivKey().toString());
                alicePubXText.setText(eccSess.getAlicePubKey().get(0).toString());
                alicePubYText.setText(eccSess.getAlicePubKey().get(1).toString());
                bobPubXText.setText(eccSess.getBobPubKey().get(0).toString());
                bobPubYText.setText(eccSess.getBobPubKey().get(1).toString());
        } catch (IOException ex) {
            Logger.getLogger(ECCPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(ECCPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

}//GEN-LAST:event_genCurveKeysButtonMouseReleased

private void eccActionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eccActionMouseReleased
    eccOutputText.setText("");
    // Reaffirms ECC in object vars matches display
    pVariableText.setText(eccSess.getP().toString());
    aVariableText.setText(eccSess.getA().toString());
    bVariableText.setText(eccSess.getB().toString());
    generatorXText.setText(eccSess.getgX().toString());
    generatorY1Text.setText(eccSess.getgY1().toString());
    generatorY2Text.setText(eccSess.getgY2().toString());
    int sender = senderCombo.getSelectedIndex();
    
    //checks for null
    if (eccInputText.getText().trim().length() == 0) {
        JOptionPane.showMessageDialog(null, "Can't encrypt nothingess...", "Null Input!", JOptionPane.ERROR_MESSAGE); 
    }
    //Checking operation selection and running relevent algorithm
    else if (eccInputText.getText().trim().length() > 50000) {
        JOptionPane.showMessageDialog(null, "Current Input limit: 50,000 characters ", "Too Large", JOptionPane.ERROR_MESSAGE);
    } else if (operationCombo.getSelectedIndex() == 0) {
            try {
                eccOutputText.setText(eccSess.eccOperation(eccInputText.getText(), 'e', sender));
                JOptionPane.showMessageDialog(null, "Encrypt Processing done!", "Notice", JOptionPane.ERROR_MESSAGE);
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(ECCPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(ECCPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
    } else if (operationCombo.getSelectedIndex() == 1) {
            try {
                eccOutputText.setText(eccSess.eccOperation(eccInputText.getText(), 'd', sender));
                JOptionPane.showMessageDialog(null, "Decrypt Processing done!", "Notice", JOptionPane.ERROR_MESSAGE);
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(ECCPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(ECCPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
    } else if (operationCombo.getSelectedIndex() == 2) {
            try {
                eccOutputText.setText(eccSess.eccOperation(eccInputText.getText(), 's', sender));
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(ECCPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(ECCPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        JOptionPane.showMessageDialog(null, "Sign Processing done!", "Notice", JOptionPane.ERROR_MESSAGE);
    } else if (operationCombo.getSelectedIndex() == 3) {
            try {
                eccOutputText.setText(eccSess.eccOperation(eccInputText.getText(),'d', sender));
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(ECCPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(ECCPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        fileChooserFrame.setVisible(true);
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
                try {
                    String fileContents = this.readFile(fileChooser.getSelectedFile().toString());
                    if (eccOutputText.getText().equals(eccSess.getDigest(fileContents))) {
                        System.out.println("File Contents?: " + fileContents);
                        JOptionPane.showMessageDialog(null, "Your file matches the senders!", "Notice", JOptionPane.ERROR_MESSAGE);
                        eccOutputText.append("\n File Match!! :D");
                    } else {
                        JOptionPane.showMessageDialog(null, "FILES DO NOT MATCH!!!?!", "Notice", JOptionPane.ERROR_MESSAGE);
                        eccOutputText.append("\n Files DO NOT MATCH!! D:");
                    }
                fileChooserFrame.setVisible(false);
                } catch (NoSuchAlgorithmException ex) {
                    Logger.getLogger(ECCPanel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(ECCPanel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(ECCPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
        } else {
            System.out.println("File access cancelled by user.");
            fileChooserFrame.setVisible(false);
        }
    } else {
        JOptionPane.showMessageDialog(null, "A GUI Error has Occurred", "GUI Error!", JOptionPane.ERROR_MESSAGE);
    }
}//GEN-LAST:event_eccActionMouseReleased

private void genHashButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genHashButtonActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_genHashButtonActionPerformed

private void genHashButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genHashButtonMouseReleased
    fileChooserFrame.setVisible(true);
    int returnVal = fileChooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                String fileContents = readFile(fileChooser.getSelectedFile().toString());
                eccInputText.setText(eccSess.getDigest(fileContents));
                fileChooserFrame.setVisible(false);
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(ECCPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(ECCPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ECCPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
    } else {
        System.out.println("File access cancelled by user.");
        fileChooserFrame.setVisible(false);
    }


}//GEN-LAST:event_genHashButtonMouseReleased

private void enterKeyCurveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterKeyCurveMouseReleased
    String incomingA = JOptionPane.showInputDialog(null, "Enter A: ","", 1);
    String incomingB = JOptionPane.showInputDialog(null, "Enter B: ","", 1);
    String incomingP = JOptionPane.showInputDialog(null, "P ","", 1);
    String incomingGX = JOptionPane.showInputDialog(null, "GX ","", 1);
    String incomingGY = JOptionPane.showInputDialog(null, "GY ","", 1);
    String incomingAlice = JOptionPane.showInputDialog(null, "Alice Priv ","", 1);
    String incomingBob = JOptionPane.showInputDialog(null, "Bob Priv ","", 1);
    
    //Cancel Handeling
    if (incomingA == null)
            incomingA = "0";
    if (incomingB == null)
            incomingB = "0";
    if (incomingP == null)
            incomingP = "0";
    if (incomingGX == null)
            incomingGX = "9999999";
    if (incomingGY == null)
            incomingGY = "9999999";
    

                eccSess = new ECCController();
                eccSess.setA(new BigInteger(incomingA));
                eccSess.setB(new BigInteger(incomingB));
                eccSess.setP(new BigInteger(incomingP));
                eccSess.setgX(new BigInteger(incomingGX));
                eccSess.setgY(new BigInteger(incomingGY));
                eccSess.setgY2(new BigInteger(incomingGY));
                eccSess.setAlicePriveKey(new BigInteger(incomingAlice));
                eccSess.setBobPriveKey(new BigInteger(incomingBob));
                
                pVariableText.setText(eccSess.getP().toString());
                aVariableText.setText(eccSess.getA().toString());
                bVariableText.setText(eccSess.getB().toString());
                generatorXText.setText(eccSess.getgX().toString());
                generatorY1Text.setText(eccSess.getgY1().toString());
                generatorY2Text.setText(eccSess.getgY2().toString());
                alicePrivText.setText(eccSess.getAlicePrivKey().toString());
                bobPrivText.setText(eccSess.getBobPrivKey().toString());
                alicePubXText.setText(eccSess.getAlicePubKey().get(0).toString());
                alicePubYText.setText(eccSess.getAlicePubKey().get(1).toString());
                bobPubXText.setText(eccSess.getBobPubKey().get(0).toString());
                bobPubYText.setText(eccSess.getBobPubKey().get(1).toString());

    //Update GUI display values
    
}//GEN-LAST:event_enterKeyCurveMouseReleased

private void operationComboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_operationComboMouseClicked

}//GEN-LAST:event_operationComboMouseClicked

private void generatorXTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generatorXTextMouseClicked
    generatorXText.selectAll();
}//GEN-LAST:event_generatorXTextMouseClicked

private void aVariableTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aVariableTextMouseClicked
    aVariableText.selectAll();
}//GEN-LAST:event_aVariableTextMouseClicked

private void eccInputTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eccInputTextMouseClicked
    eccInputText.selectAll();
}//GEN-LAST:event_eccInputTextMouseClicked

private void bVariableTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bVariableTextMouseClicked
    bVariableText.selectAll();
}//GEN-LAST:event_bVariableTextMouseClicked

private void pVariableTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pVariableTextMouseClicked
    pVariableText.selectAll();
}//GEN-LAST:event_pVariableTextMouseClicked

private void enterKeyCurveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterKeyCurveActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_enterKeyCurveActionPerformed

private void alicePrivTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alicePrivTextMouseClicked
    alicePrivText.selectAll();
}//GEN-LAST:event_alicePrivTextMouseClicked

private void alicePubXTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alicePubXTextMouseClicked
    alicePubXText.selectAll();
}//GEN-LAST:event_alicePubXTextMouseClicked

private void eccActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eccActionActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_eccActionActionPerformed

private void senderComboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_senderComboMouseClicked
// TODO add your handling code here:
}//GEN-LAST:event_senderComboMouseClicked

private void senderComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_senderComboActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_senderComboActionPerformed

private void generatorY1TextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generatorY1TextMouseClicked
    generatorY1Text.selectAll();
}//GEN-LAST:event_generatorY1TextMouseClicked

private void alicePubYTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alicePubYTextMouseClicked
    alicePubYText.selectAll();
}//GEN-LAST:event_alicePubYTextMouseClicked

private void bobPrivTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bobPrivTextMouseClicked
    bobPrivText.selectAll();
}//GEN-LAST:event_bobPrivTextMouseClicked

private void bobPubXTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bobPubXTextMouseClicked
    bobPubXText.selectAll();
}//GEN-LAST:event_bobPubXTextMouseClicked

private void bobPubYTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bobPubYTextMouseClicked
    bobPubYText.selectAll();
}//GEN-LAST:event_bobPubYTextMouseClicked

private void generatorY2TextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generatorY2TextMouseClicked
    generatorY2Text.selectAll();
}//GEN-LAST:event_generatorY2TextMouseClicked

private void eccOutputTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eccOutputTextMouseClicked
    eccOutputText.selectAll();
}//GEN-LAST:event_eccOutputTextMouseClicked

private void pointAddtionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pointAddtionMouseReleased
    String pX = JOptionPane.showInputDialog(null, "Enter P x: ","", 1);
    String pY = JOptionPane.showInputDialog(null, "Enter P y: ","", 1);
    String qX = JOptionPane.showInputDialog(null, "Enter Q x: ","", 1);
    String qY = JOptionPane.showInputDialog(null, "Enter Q y: ","", 1);
    ArrayList p = new ArrayList(2);
    p.add(0, new BigInteger(pX));
    p.add(1, new BigInteger(pY));
    ArrayList q = new ArrayList(2);
    q.add(0, new BigInteger(qX));
    q.add(1, new BigInteger(qY));
    JOptionPane.showMessageDialog(null, "Resultant Point" + eccSess.pPlusQ(p, q), "Notice", JOptionPane.ERROR_MESSAGE);
}//GEN-LAST:event_pointAddtionMouseReleased

private void pointAddtionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointAddtionActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_pointAddtionActionPerformed

private void pointMultiplyMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pointMultiplyMouseReleased
    String pX = JOptionPane.showInputDialog(null, "Enter P x: ","", 1);
    String pY = JOptionPane.showInputDialog(null, "Enter P y: ","", 1);
    String n = JOptionPane.showInputDialog(null, "Enter N: ","", 1);

    ArrayList p = new ArrayList(2);
    p.add(0, new BigInteger(pX));
    p.add(1, new BigInteger(pY));
    JOptionPane.showMessageDialog(null, "Resultant Point" + eccSess.nTimesP(p, n), "Notice", JOptionPane.ERROR_MESSAGE);
}//GEN-LAST:event_pointMultiplyMouseReleased

private void pointMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointMultiplyActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_pointMultiplyActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aVariableLabel;
    private javax.swing.JTextArea aVariableText;
    private javax.swing.JLabel alicePrivLabel;
    private javax.swing.JTextArea alicePrivText;
    private javax.swing.JLabel alicePubXLabel;
    private javax.swing.JTextArea alicePubXText;
    private javax.swing.JLabel alicePubYLabel;
    private javax.swing.JTextArea alicePubYText;
    private javax.swing.JLabel bVariableLabel;
    private javax.swing.JTextArea bVariableText;
    private javax.swing.JLabel bobPrivLabel;
    private javax.swing.JTextArea bobPrivText;
    private javax.swing.JLabel bobPubXLabel;
    private javax.swing.JTextArea bobPubXText;
    private javax.swing.JLabel bobPubYLabel;
    private javax.swing.JTextArea bobPubYText;
    private javax.swing.JButton eccAction;
    private javax.swing.JLabel eccInputLabel;
    private javax.swing.JTextArea eccInputText;
    private javax.swing.JLabel eccOutputLabel;
    private javax.swing.JTextArea eccOutputText;
    private javax.swing.JButton enterKeyCurve;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JInternalFrame fileChooserFrame;
    private javax.swing.JButton genCurveKeysButton;
    private javax.swing.JButton genHashButton;
    private javax.swing.JLabel generatorXLabel;
    private javax.swing.JTextArea generatorXText;
    private javax.swing.JLabel generatorY1Label;
    private javax.swing.JTextArea generatorY1Text;
    private javax.swing.JLabel generatorY2Label;
    private javax.swing.JTextArea generatorY2Text;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JComboBox keySizeCombo;
    private java.awt.Label keySizeLabel;
    private java.awt.Label keySizeLabel1;
    private javax.swing.JComboBox operationCombo;
    private javax.swing.JLabel pVariableLabel;
    private javax.swing.JTextArea pVariableText;
    private javax.swing.JButton pointAddtion;
    private javax.swing.JButton pointMultiply;
    private javax.swing.JLabel privateKeyLabel;
    private javax.swing.JComboBox senderCombo;
    private java.awt.Label senderLabel;
    // End of variables declaration//GEN-END:variables
}
